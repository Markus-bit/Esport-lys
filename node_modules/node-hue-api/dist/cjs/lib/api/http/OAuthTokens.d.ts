export declare type Token = {
    value: string;
    expiresAt: number;
};
export declare type Tokens = {
    accessToken: Token;
    refreshToken: Token;
};
export declare type OptionalTokens = Partial<Tokens>;
export declare class OAuthTokens {
    private _accessTokenValue;
    private _refreshTokenValue;
    constructor(other?: OAuthTokens);
    _setAccessToken(token: string, expiresAt?: number): void;
    _setRefreshToken(token: string, expiresAt?: number): void;
    get refreshTokenValue(): string | undefined;
    get accessTokenValue(): string | undefined;
    /**
     * Gets the access token expiry if known
     * @returns the timestamp value of the expiry of the access token, or -1 os not known
     */
    get accessTokenExpiresAt(): number;
    /**
     * Gets the refresh token expiry if known
     * @returns the timestamp value of the expiry of the refresh token, or -1 os not known
     */
    get refreshTokenExpiresAt(): number;
    get accessToken(): Token | undefined;
    get refreshToken(): Token | undefined;
    toString(): string;
}
