"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalInsecureBootstrap = void 0;
const url = require("url");
const Transport_1 = require("./Transport");
const Api_1 = require("../Api");
const HttpClientFetch_1 = require("./HttpClientFetch");
const SUPPRESS_WARNING = process.env.NODE_HUE_API_USE_INSECURE_CONNECTION != null;
class LocalInsecureBootstrap {
    constructor(hostname, port) {
        this.baseUrl = url.format({ protocol: 'http', hostname: hostname, port: port || 80 });
        this.hostname = hostname;
    }
    connect(username, clientkey) {
        const baseUrl = this.baseUrl;
        if (!SUPPRESS_WARNING) {
            console.log('WARNING: You are using this library in an insecure way!\n'
                + 'The Hue bridge supports HTTPS connections locally and it is highly recommended that you use an HTTPS\n'
                + 'method to communicate with the bridge.');
        }
        return HttpClientFetch_1.request({ method: 'GET', url: `${baseUrl}/api/config` })
            .then(() => {
            const apiBaseUrl = `${baseUrl}/api`, transport = new Transport_1.Transport(HttpClientFetch_1.create({ baseURL: apiBaseUrl }), username), config = {
                remote: false,
                baseUrl: apiBaseUrl,
                clientkey: clientkey,
                username: username,
            };
            return new Api_1.Api(config, transport);
        });
    }
}
exports.LocalInsecureBootstrap = LocalInsecureBootstrap;
;
